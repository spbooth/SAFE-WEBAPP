//| Copyright - The University of Edinburgh 2014                            |
//|                                                                         |
//| Licensed under the Apache License, Version 2.0 (the "License");         |
//| you may not use this file except in compliance with the License.        |
//| You may obtain a copy of the License at                                 |
//|                                                                         |
//|    http://www.apache.org/licenses/LICENSE-2.0                           |
//|                                                                         |
//| Unless required by applicable law or agreed to in writing, software     |
//| distributed under the License is distributed on an "AS IS" BASIS,       |
//| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.|
//| See the License for the specific language governing permissions and     |
//| limitations under the License.                                          |
package uk.ac.ed.epcc.webapp.charts;

import uk.ac.ed.epcc.webapp.AppContext;
import uk.ac.ed.epcc.webapp.charts.jfreechart.JFreeScatterPeriodChartData;
import uk.ac.ed.epcc.webapp.logging.LoggerService;
import uk.ac.ed.epcc.webapp.time.SplitTimePeriod;

/** A {@link ScatterPeriodChart} is a scatter plot where each point 
 * is generated by a different time period.
 * @author spb
 *
 */

public class ScatterPeriodChart<P extends ScatterPeriodPlot> extends Chart<P> {

	/**
	 * @param conn
	 */
	protected ScatterPeriodChart(AppContext conn) {
		super(conn);
	}

	public ScatterPeriodChartData<P> getChartData(){
		return (ScatterPeriodChartData<P>) super.getChartData();
	}
	
	public static ScatterPeriodChart getInstance(AppContext conn, SplitTimePeriod period, int nsplit){
		ScatterPeriodChart chart = new ScatterPeriodChart(conn);
		Class<? extends ScatterPeriodChartData> clazz = conn.getPropertyClass(ScatterPeriodChartData.class, JFreeScatterPeriodChartData.class, "ScatterPeriodChartData");
		
		try {
			ScatterPeriodChartData chart_data = conn.makeObject(clazz);
			chart_data.setPeriod(period, nsplit);
			chart.setChartData(chart_data);
		} catch (Exception e) {
			conn.getService(LoggerService.class).getLogger(ScatterPeriodChart.class).error("Error making TimeChartData",e);
			return null;
		}
		
		return chart;
	}
}